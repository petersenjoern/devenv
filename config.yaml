categories:
  terminals:
    alacritty:
      display_name: "Alacritty Terminal"
      binary_name: "alacritty"
      install_method: "manual"
      package_name: ""
      install_script: ""
      config_path: "~/.config/alacritty/alacritty.toml"
      config_template: ""
      dependencies: []
      wsl_notes: "Install Alacritty on Windows host system. Download from https://github.com/alacritty/alacritty/releases"

  multiplexers:
    tmux:
      display_name: "Tmux Terminal Multiplexer"
      binary_name: "tmux"
      install_method: "apt"
      package_name: "tmux"
      install_script: ""
      config_path: "~/.tmux.conf"
      config_template: "templates/tmux.conf"
      dependencies: []
      wsl_notes: ""

  shells:
    zsh:
      display_name: "Zsh Shell"
      binary_name: "zsh"
      install_method: "apt"
      package_name: "zsh"
      install_script: ""
      config_path: "~/.zshrc"
      config_template: "templates/zsh.conf"
      dependencies: []
      wsl_notes: ""

    zsh_enhanced:
      display_name: "Zsh with Oh My Zsh"
      binary_name: ""
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/zsh_enhanced.sh"
      config_path: ""
      config_template: ""
      dependencies: ["git", "curl", "zsh"]
      wsl_notes: ""
      post_install_steps:
        - "Use 'chsh -s $(which zsh)' to set as default shell"
        - "Plugins: autosuggestions, syntax-highlighting"
        - "Theme: powerlevel10k (run 'p10k configure')"

  editors:
    vim:
      display_name: "Vim Editor"
      binary_name: "vim"
      install_method: "apt"
      package_name: "vim"
      install_script: ""
      config_path: "~/.vimrc"
      config_template: ""
      dependencies: []
      wsl_notes: ""

    neovim:
      display_name: "Neovim Editor with LayzVIM"
      binary_name: "nvim"
      install_method: "apt"
      package_name: "neovim"
      install_script: ""
      config_path: "~/.config/nvim/init.vim"
      config_template: ""
      dependencies: []
      wsl_notes: ""

    # review
    vscode:
      display_name: "Visual Studio Code"
      binary_name: "code"
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/vscode.sh"
      config_path: "~/.config/Code/User/settings.json"
      config_template: "templates/vscode.json"
      dependencies: ["curl"]
      wsl_notes: "Install VS Code on Windows host system. Download from https://code.visualstudio.com/"

  # review mise
  runtime_managers:
    mise:
      display_name: "Mise Runtime Manager"
      binary_name: "mise"
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/mise.sh"
      config_path: "~/.config/mise/config.toml"
      config_template: "templates/mise.toml"
      dependencies: []
      wsl_notes: ""

  utilities:
    # add ripgrep?
    eza:
      display_name: "Eza"
      binary_name: "eza"
      install_method: "script"
      package_name: ""
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: ["gpg", "wget"]
      wsl_notes: ""

    bat:
      display_name: "Bat (Better Cat)"
      binary_name: "bat"
      install_method: "apt"
      package_name: "bat"
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: []
      wsl_notes: ""

    fd:
      display_name: "Fd (Better Find)"
      binary_name: "fd"
      install_method: "apt"
      package_name: "fd-find"
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: []
      wsl_notes: ""

    fzf:
      display_name: "FZF Fuzzy Finder"
      binary_name: "fzf"
      install_method: "apt"
      package_name: ""
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: [""]
      wsl_notes: ""
      post_install_steps:
        - "source <(fzf --zsh) for zsh or eval $(fzf --bash) for bash"

    git:
      display_name: "Git Version Control"
      binary_name: "git"
      install_method: "apt"
      package_name: "git"
      install_script: ""
      config_path: "~/.gitconfig"
      config_template: ""
      dependencies: []
      wsl_notes: ""

    curl:
      display_name: "Curl HTTP Client"
      binary_name: "curl"
      install_method: "apt"
      package_name: "curl"
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: []
      wsl_notes: ""

    btop:
      display_name: "Btop System Monitor"
      binary_name: "btop"
      install_method: "apt"
      package_name: "btop"
      install_script: ""
      config_path: "~/.config/btop/btop.conf"
      config_template: ""
      dependencies: []
      wsl_notes: ""

    lazygit:
      display_name: "Lazygit Terminal UI"
      binary_name: "lazygit"
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/lazygit.sh"
      config_path: "~/.config/lazygit/config.yml"
      config_template: ""
      dependencies: ["curl", "git"]
      wsl_notes: ""

    lazydocker:
      display_name: "Lazydocker Terminal UI"
      binary_name: "lazydocker"
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/lazydocker.sh"
      config_path: ""
      config_template: ""
      dependencies: ["curl", "docker"]
      wsl_notes: ""

  containerization:
    docker:
      display_name: "Docker Engine"
      binary_name: "docker"
      install_method: "script"
      package_name: ""
      install_script: "install_scripts/docker.sh"
      config_path: ""
      config_template: ""
      dependencies: ["ca-certificates", "curl"]
      wsl_notes: "Install docker inside WSL2."
      post_install_steps:
        - "Log out and back in for group permissions"
        - "Start Docker service: sudo systemctl start docker"
        - "Enable Docker service: sudo systemctl enable docker"

  tiling_managers:
    glazewm:
      display_name: "GlazeWM Tiling Manager"
      binary_name: "glazewm"
      install_method: "manual"
      package_name: ""
      install_script: ""
      config_path: ""
      config_template: ""
      dependencies: []
      wsl_notes: "Install GlazeWM on Windows host system. Download from https://github.com/glzr-io/glazewm/releases"
